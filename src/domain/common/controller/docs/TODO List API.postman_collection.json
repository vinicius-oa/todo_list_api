{
	"info": {
		"_postman_id": "f8a8b790-90fe-4708-9f4b-6bd83604a80d",
		"name": "TODO List API",
		"description": "`expire_date` must be the following format: YYYY-MM-DD\n\nAvailable users and passwords:  \n\\* teste1:teste1  \n\\* teste2:teste2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "14435277"
	},
	"item": [
		{
			"name": "Create TODO",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"if (jsonData.id) {",
							"    pm.collectionVariables.set(",
							"        \"todo_id\", ",
							"        jsonData.id",
							"    )",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"title\": \"string\",\n  \"description\": \"string\",\n  \"expire_date\": \"2025-04-08\",\n  \"status\": \"pendente\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8001/todo",
					"host": [
						"localhost"
					],
					"port": "8001",
					"path": [
						"todo"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update TODO",
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"title\": \"string\",\n  \"description\": \"stringe\",\n  \"expire_date\": \"2025-04-09\",\n  \"status\": \"pendente\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8001/todo/{{todo_id}}",
					"host": [
						"localhost"
					],
					"port": "8001",
					"path": [
						"todo",
						"{{todo_id}}"
					]
				},
				"description": "`expire_date` must be the following format: YYYY-MM-DD"
			},
			"response": []
		},
		{
			"name": "Delete TODO",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "localhost:8001/todo/{{todo_id}}",
					"host": [
						"localhost"
					],
					"port": "8001",
					"path": [
						"todo",
						"{{todo_id}}"
					]
				},
				"description": "`expire_date` must be the following format: YYYY-MM-DD"
			},
			"response": []
		},
		{
			"name": "Read TODO",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8001/todo",
					"host": [
						"localhost"
					],
					"port": "8001",
					"path": [
						"todo"
					]
				},
				"description": "`expire_date` must be the following format: YYYY-MM-DD"
			},
			"response": []
		},
		{
			"name": "Get Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"if (jsonData.access_token) {",
							"    pm.collectionVariables.set(",
							"        \"access_token\", ",
							"        jsonData.access_token",
							"    )",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "username",
							"value": "teste1",
							"type": "text"
						},
						{
							"key": "password",
							"value": "teste1",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "localhost:8001/token",
					"host": [
						"localhost"
					],
					"port": "8001",
					"path": [
						"token"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{access_token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "todo_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "access_token",
			"value": "",
			"type": "string"
		}
	]
}